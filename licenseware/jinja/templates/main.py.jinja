import logging
import settings
from settings import config
from app.api import routers
from app.dependencies.web import WebApp
from app.uploaders import uploaders
from licenseware import NewApp, Flags



def get_db(env):
    from app.dependencies.db import memory#, mongo, redis
    mongo, redis = None, None
    return memory.InMemory
    # {
    #     settings.Environment.TEST: memory.InMemory,
    #     settings.Environment.DEV: redis.Redis,
    #     settings.Environment.PROD: mongo.Mongo,
    # }[env]



app = NewApp(
    name="Oracle Middleware Manager",
    description="""OMWM Automate the analysis and determination of Oracle Middleware usage.""",
    flags=[Flags.BETA],
    config=config
)

[app.attach_uploader(u) for u in uploaders]



webapp = WebApp(
    title=app.name,
    description=app.description
)

[webapp.include_router(router) for router in routers]

webapp.state.db = get_db(config.ENV)()




logger = logging.getLogger()
logger.setLevel(config.LOG_LEVEL.value)
logger.info("Starting with environment: %s", config.ENV)


if __name__ == "__main__":
    import uvicorn

    uvicorn.run(
        "main:webapp",
        host="0.0.0.0",
        port=config.PORT,
        reload=config.ENV == settings.Environment.DEV,
    )